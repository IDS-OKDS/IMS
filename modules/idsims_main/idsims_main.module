<?php
/**
 * @file
 * Module for bespoke IDS IMS customisations
 */
define('IDSIMS_ENTITY_NEXT_ID_START', 100000);

/*
 * Implimentation of hook_init()
 */
function idsims_main_init() {
	drupal_add_js(drupal_get_path('module', 'idsims_main').'/js/idsims-main.js');
	drupal_add_css(drupal_get_path('module', 'idsims_main').'/css/idsims-main.css');
	  // Include inline_entity_form.module integration.
	  if (module_exists('inline_entity_form')) {
	    module_load_include('inc', 'idsims_main', 'idsims_main.inline_entity_form');
	  }
}

/**
 * Implement hook_menu()
 */
function idsims_main_menu() {
	$items['admin/config/ids-ims'] = array(
    'title' => 'IDS IMS',
    'description' => 'Settings related to the IDS IMS.',
    'position' => 'left',
    'weight' => -15,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
	);
	return $items ;
}

/*
 * Implimentation of hook_form_alter()
 */
function idsims_main_form_alter(&$form, &$form_state, $form_id) {
	if($form_id == 'ids_document_node_form'){
		if(arg(1) == 'add'){
			$first_day_of_year = format_date(strtotime('now'), 'custom', 'Y', 'UTC') . '-01-01 00:00:00';
			$form["field_publication_date"][LANGUAGE_NONE][0]['#default_value'] = array(
			    'value' => $first_day_of_year,
			    'timezone' => 'UTC',  
			    'timezone_db' => 'UTC',
			);
		}
	}
}

/*
 * Implimentaion of hook_entity_presave
 *
 * 1. Create Asset ID (object_id) for new Nodes/Terms
 * 2. Update shared fields across sites/branches
 * 3. Create references to Document Abstracts on Document URL nodes
 */
function idsims_main_entity_presave($entity, $type) {
	/* 1. Create Asset ID (object_id) for new Nodes/Terms -- Document URL Entity works differently, it gets it's Asset ID from parent Document node */
	if($type != 'ids_document_url'){
		$asset_id = _idsims_main_get_asset_id($entity, $type);
	}
	if($type == 'node'){
		/* 2. Update shared fields across sites/branches */
		_idsims_main_update_shared_fields($entity, $type, $asset_id);
		/* 3. Create references to Document Abstracts on Document URL entities */
		_idsims_main_update_references_to_document_abstracts($entity, $type, $asset_id);
	}
}


/*
 *  return Asset ID from entity or add if doesn't exist.
 */
function _idsims_main_get_asset_id(&$entity, $type){
	/* Add an Asset ID if there isn't one */
	$asset_id = FALSE;
	$field_language = field_language($type, $entity, 'field_object_id');
	$objectid_set = TRUE;
	if(!isset($entity->field_object_id[$field_language])){
		$objectid_set = FALSE;
	} elseif(!isset($entity->field_object_id[$field_language][0]['value'])){
		$objectid_set = FALSE;
	} elseif(!$entity->field_object_id[$field_language][0]['value']){
		$objectid_set = FALSE;
	}
	if(!$objectid_set){
		$new_object_id_num = variable_get('idsims_entity_next_id', IDSIMS_ENTITY_NEXT_ID_START);
		$new_object_id_num++;
		$new_object_id = FALSE;
		if($type == 'node'){
			$new_object_id = 'A' . $new_object_id_num;
		}
		if($type == 'taxonomy_term'){
			if($entity->vocabulary_machine_name == 'ids_countries'){
				$new_object_id = 'A' . $new_object_id_num;
			} else {
				$new_object_id = 'C' . $new_object_id_num;
			}
		}
		if($new_object_id && isset($entity->field_object_id)){
			drupal_set_message('Object ID created for entity (' . $new_object_id . ')');
			$entity->field_object_id[$field_language][0]['value'] = $new_object_id;
			variable_set('idsims_entity_next_id', $new_object_id_num);
		}
		$asset_id = $new_object_id;
	} else {
		$asset_id = $entity->field_object_id[$field_language][0]['value'];
	}
	return $asset_id;
}


/*
 * Update shared fields across sites/branches
 */
function _idsims_main_update_shared_fields(&$entity, $type, $asset_id){
	/*
	 * Array of sheared field IDs -- add to this if you want this field to update across all sites/branches
	 */
}


/*
 * Create references to Document Abstracts on Document URL nodes
 */
function _idsims_main_update_references_to_document_abstracts(&$entity, $type, $asset_id){
	/*
	 * Make references in IDS Document URL Entities to IDS Document nodes
	 * Add IDS Document node Asset ID (object_id) as Asset ID (object_id) in entity
	 * 
	 * First find the IDS Document URL Entities attached to this node
	 */
	$field_language = field_language($type, $entity, 'field_document_urls');
	if(isset($entity->field_document_urls[$field_language])){
		$document_url_entity_ids = array();
		foreach($entity->field_document_urls[$field_language] as $key => $item){
			$document_url_entity_ids[] = $item['target_id'];
		}
		if(count($document_url_entity_ids)){
			$document_url_entities = entity_load('ids_document_url', $document_url_entity_ids);
			foreach($document_url_entities as $key => $document_url_entity){
				$document_url_entity->field_object_id[$field_language][0]['value'] = $asset_id;
				field_attach_update('ids_document_url', $document_url_entity);
			}
		}
	}

}
